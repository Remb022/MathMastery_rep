package com.example.mathmastery_beta

import android.content.Context
import android.util.Log
import com.example.mathmastery_beta.handlers.HandlerDataSave
import com.kynzai.game2048.game.logic.records.UserProgressManager
import dagger.Module
import dagger.Provides
import dagger.hilt.InstallIn
import dagger.hilt.android.qualifiers.ApplicationContext
import dagger.hilt.components.SingletonComponent
import javax.inject.Singleton

@Module
@InstallIn(SingletonComponent::class)
object Game2048Module {
    private const val TAG = "Game2048Module"

    @Provides
    @Singleton
    fun provideHandlerDataSave(@ApplicationContext context: Context): HandlerDataSave {
        Log.d(TAG, "–°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ HandlerDataSave...")
        return HandlerDataSave(context).also {
            Log.d(TAG, "HandlerDataSave —Å–æ–∑–¥–∞–Ω: $it")
        }
    }

    @Provides
    @Singleton
    fun provideUserProgressManager(handlerDataSave: HandlerDataSave): UserProgressManager {
        Log.d(TAG, "–°–æ–∑–¥–∞–Ω–∏–µ UserProgressManager —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º: $handlerDataSave")
        return object : UserProgressManager {
            override fun addUserExp(expToSave: Int) {
                Log.d("EXP_TRANSFER", "üîº [2048] –ü–æ–ª—É—á–µ–Ω–æ –æ–ø—ã—Ç–∞: $expToSave")
                val beforeExp = handlerDataSave.getUserExp()
                val beforeLevel = handlerDataSave.getUserLevel()

                handlerDataSave.userLevelUp(expToSave)

                val afterExp = handlerDataSave.getUserExp()
                val afterLevel = handlerDataSave.getUserLevel()

                Log.d("EXP_TRANSFER", "üîΩ [Handler] –†–µ–∑—É–ª—å—Ç–∞—Ç: " +
                        "–£—Ä–æ–≤–µ–Ω—å $beforeLevel‚Üí$afterLevel, " +
                        "–û–ø—ã—Ç $beforeExp‚Üí$afterExp")
            }
        }
    }

}
